{"ast":null,"code":"var _jsxFileName = \"/Users/pranayreddy/Desktop/react-app/src/components/ExpensesList/ExpensesList.js\",\n    _s = $RefreshSig$();\n\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\nimport ExpenseItem from \"../ExpenseItem/ExpenseItem\";\nimport \"./ExpensesList.css\";\nimport { useState } from \"react\";\nimport Card from \"../Card/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpensesList(props) {\n  _s();\n\n  const expenses = props.expensesArray;\n  const [filterYear, setFilterYear] = useState(\"2021\");\n\n  function newFilterHandler(newFilterEntered) {\n    setFilterYear(newFilterEntered);\n  }\n\n  let yearExpenses = expenses.filter(function (item) {\n    return item.date.getFullYear() == filterYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expenses card\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      onNewFilter: newFilterHandler,\n      currentYear: filterYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), yearExpenses.map(function (expenseItem) {\n      return (\n        /*#__PURE__*/\n        // Recall that returned items on each round are accumulated in an array by map\n        _jsxDEV(ExpenseItem, {\n          // Used to help react differ between similar divs, improve performance. key prop is always used by react to differentiate, so don't use it for custom data\n          title: expenseItem.title,\n          amount: expenseItem.amount,\n          date: expenseItem.date\n        }, expenseItem.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      );\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpensesList, \"xH2VmAya77TjpauPVdbzcYcf4sg=\");\n\n_c = ExpensesList;\nexport default ExpensesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"sources":["/Users/pranayreddy/Desktop/react-app/src/components/ExpensesList/ExpensesList.js"],"names":["ExpensesFilter","ExpenseItem","useState","Card","ExpensesList","props","expenses","expensesArray","filterYear","setFilterYear","newFilterHandler","newFilterEntered","yearExpenses","filter","item","date","getFullYear","map","expenseItem","title","amount","id"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAMC,QAAQ,GAAGD,KAAK,CAACE,aAAvB;AAEA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,MAAD,CAA5C;;AAEA,WAASQ,gBAAT,CAA0BC,gBAA1B,EAA4C;AAC1CF,IAAAA,aAAa,CAACE,gBAAD,CAAb;AACD;;AAED,MAAIC,YAAY,GAAGN,QAAQ,CAACO,MAAT,CAAgB,UAAUC,IAAV,EAAgB;AACjD,WAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,MAA2BR,UAAlC;AACD,GAFkB,CAAnB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,WAAW,EAAEE,gBAA7B;AAA+C,MAAA,WAAW,EAAEF;AAA5D;AAAA;AAAA;AAAA;AAAA,YADF,EA8BGI,YAAY,CAACK,GAAb,CAAiB,UAAUC,WAAV,EAAuB;AACvC;AAAA;AACE;AACA,gBAAC,WAAD;AACuB;AACrB,UAAA,KAAK,EAAEA,WAAW,CAACC,KAFrB;AAGE,UAAA,MAAM,EAAED,WAAW,CAACE,MAHtB;AAIE,UAAA,IAAI,EAAEF,WAAW,CAACH;AAJpB,WACOG,WAAW,CAACG,EADnB;AAAA;AAAA;AAAA;AAAA;AAFF;AASD,KAVA,CA9BH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;GAzDQjB,Y;;KAAAA,Y;AA2DT,eAAeA,YAAf","sourcesContent":["import ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\nimport ExpenseItem from \"../ExpenseItem/ExpenseItem\";\nimport \"./ExpensesList.css\";\nimport { useState } from \"react\";\nimport Card from \"../Card/Card\";\n\nfunction ExpensesList(props) {\n  const expenses = props.expensesArray;\n\n  const [filterYear, setFilterYear] = useState(\"2021\");\n\n  function newFilterHandler(newFilterEntered) {\n    setFilterYear(newFilterEntered);\n  }\n\n  let yearExpenses = expenses.filter(function (item) {\n    return item.date.getFullYear() == filterYear;\n  });\n\n  return (\n    <div className=\"expenses card\">\n      <ExpensesFilter onNewFilter={newFilterHandler} currentYear={filterYear} />\n\n      {/* <ExpenseItem\n          title={expenses[0].title}\n          amount={expenses[0].amount}\n          date={expenses[0].date}\n            ></ExpenseItem>\n            <ExpenseItem\n            title={expenses[1].title}\n            amount={expenses[1].amount}  \n            date={expenses[1].date}\n            ></ExpenseItem>\n            <ExpenseItem\n            title={expenses[2].title}\n            amount={expenses[2].amount}\n            date={expenses[2].date}\n            ></ExpenseItem>\n            <ExpenseItem\n            title={expenses[3].title}\n            amount={expenses[3].amount}\n            date={expenses[3].date}\n            ></ExpenseItem> */}\n\n      {/* This way of hardcoding isn't good so iterate over expenses array */}\n      {/* Curly braces in JSX code indicate a dynamic expression/JS code. */}\n      {/* IMPORTANT. LEAVING AN ARRAY OF JSX ELEMENTS HERE MAKES REACT RENDER ALL THE CONTENTS OF THE ARRAY */}\n\n      {/* The map function returns an array of JSX elements. React picks them up and renders */}\n\n      {yearExpenses.map(function (expenseItem) {\n        return (\n          // Recall that returned items on each round are accumulated in an array by map\n          <ExpenseItem\n            key={expenseItem.id} // Used to help react differ between similar divs, improve performance. key prop is always used by react to differentiate, so don't use it for custom data\n            title={expenseItem.title}\n            amount={expenseItem.amount}\n            date={expenseItem.date}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default ExpensesList;\n"]},"metadata":{},"sourceType":"module"}