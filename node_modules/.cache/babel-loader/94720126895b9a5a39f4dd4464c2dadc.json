{"ast":null,"code":"var _jsxFileName = \"/Users/pranayreddy/Desktop/react-app/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseForm() {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState(\"Title\");\n\n  function titleChangeHandler(changeEvent) {\n    if (changeEvent.target.value === \"\") setEnteredTitle(\"Title\");else setEnteredTitle(changeEvent.target.value);\n  }\n\n  const [enteredAmount, setEnteredAmount] = useState(\"Amount\");\n\n  function amountChangeHandler(changeEvent) {\n    if (changeEvent.target.value === \"\") setEnteredAmount(\"Amount\");else setEnteredAmount(changeEvent.target.value);\n  }\n\n  const [enteredDate, setEnteredDate] = useState(\"Date\");\n\n  function dateChangeHandler(changeEvent) {\n    if (changeEvent.target.value === \"\") setEnteredDate(\"Date \");else setEnteredDate(changeEvent.target.value);\n  } // This is way of updating 3 individual states, we can also put em all in an object\n\n\n  const [userState, setUserState] = useState({\n    enteredTitle: \"Title\",\n    enteredAmount: \"Amount\",\n    enteredDate: \"Date\"\n  }); // Simply update the whole object in the function. use the spread and override intended property\n\n  function titleChangeHandler(changeEvent) {\n    setUserState({ ...userState,\n      enteredTitle: changeEvent.target.value\n    });\n  }\n\n  function amountChangeHandler(changeEvent) {\n    setUserState({ ...userState,\n      enteredAmount: changeEvent.target.value\n    });\n  }\n\n  function dateChangeHandler(changeEvent) {\n    setUserState({ ...userState,\n      enteredDate: changeEvent.target.value\n    });\n  } // Above is bad too, when we use current state to update next state, we should use a function inside the updater\n  // React sends in pastState parameter by default when we use a function in updater\n  // Previous manual way may contain inconistency becuase of internal scheduling. But passing function way, react guarantees that it is exactly previous state\n\n\n  function titleChangeHandler(changeEvent) {\n    setUserState(function (pastState) {\n      return { ...pastState,\n        enteredTitle: changeEvent.target.value\n      };\n    });\n  }\n\n  function amountChangeHandler(changeEvent) {\n    setUserState(function (pastState) {\n      return { ...pastState,\n        enteredAmount: changeEvent.target.value\n      };\n    });\n  }\n\n  function dateChangeHandler(changeEvent) {\n    setUserState(function (pastState) {\n      return { ...pastState,\n        enteredDate: changeEvent.target.value\n      };\n    });\n  }\n\n  function submitHandler(event) {\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: userState.enteredTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: userState.enteredAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: userState.enteredDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"01-01-2019\",\n          max: \"31-12-2022\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add new expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ExpenseForm, \"VBHLMPgMBAJZa50PTX0MVhAMfv4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/Users/pranayreddy/Desktop/react-app/src/components/NewExpense/ExpenseForm.js"],"names":["useState","ExpenseForm","enteredTitle","setEnteredTitle","titleChangeHandler","changeEvent","target","value","enteredAmount","setEnteredAmount","amountChangeHandler","enteredDate","setEnteredDate","dateChangeHandler","userState","setUserState","pastState","submitHandler","event","preventDefault"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nfunction ExpenseForm() {\n\n    const [enteredTitle, setEnteredTitle] = useState(\"Title\");\n    function titleChangeHandler(changeEvent) {\n      if(changeEvent.target.value === \"\") setEnteredTitle(\"Title\");\n      else setEnteredTitle(changeEvent.target.value);\n    }\n\n    const [enteredAmount, setEnteredAmount] = useState(\"Amount\");\n    function amountChangeHandler(changeEvent) {\n      if(changeEvent.target.value === \"\") setEnteredAmount(\"Amount\");\n      else setEnteredAmount(changeEvent.target.value);\n    }\n\n    const [enteredDate, setEnteredDate] = useState(\"Date\");\n    function dateChangeHandler(changeEvent) {\n      if(changeEvent.target.value === \"\") setEnteredDate(\"Date \");\n      else setEnteredDate(changeEvent.target.value);\n    }\n\n\n\n\n\n    // This is way of updating 3 individual states, we can also put em all in an object\n  const [userState, setUserState] = useState({\n    enteredTitle: \"Title\",\n    enteredAmount: \"Amount\",\n    enteredDate: \"Date\",\n  });\n\n\n\n    // Simply update the whole object in the function. use the spread and override intended property\n    function titleChangeHandler(changeEvent) {\n        setUserState({\n            ...userState,\n            enteredTitle : changeEvent.target.value,\n        })\n    }\n\n    function amountChangeHandler(changeEvent) {\n        setUserState({\n            ...userState,\n            enteredAmount : changeEvent.target.value,\n        })\n    }\n\n    function dateChangeHandler(changeEvent) {\n        setUserState({\n            ...userState,\n            enteredDate: changeEvent.target.value,\n        })\n    }\n\n\n\n\n\n\n\n\n    // Above is bad too, when we use current state to update next state, we should use a function inside the updater\n    // React sends in pastState parameter by default when we use a function in updater\n    // Previous manual way may contain inconistency becuase of internal scheduling. But passing function way, react guarantees that it is exactly previous state\n    function titleChangeHandler(changeEvent) {\n        setUserState(function(pastState){\n            return {\n                ...pastState,\n                enteredTitle : changeEvent.target.value,\n            }\n        })\n    }\n\n    function amountChangeHandler(changeEvent) {\n        setUserState(function(pastState){\n            return {\n                ...pastState,\n                enteredAmount : changeEvent.target.value,\n            }\n        })\n    }\n\n    function dateChangeHandler(changeEvent) {\n        setUserState(function(pastState){\n            return {\n                ...pastState,\n                enteredDate : changeEvent.target.value,\n            }\n        })\n    }\n\n\n\n\n    function submitHandler(event){\n        event.preventDefault();\n    }\n\n  return (\n    <form onSubmit = {submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>{userState.enteredTitle}</label>\n          <input type=\"text\" onChange={titleChangeHandler} />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>{userState.enteredAmount}</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n          />\n        </div>\n\n        <div className=\"new-expense__control\">\n          <label>{userState.enteredDate}</label>\n          <input\n            type=\"date\"\n            min=\"01-01-2019\"\n            max=\"31-12-2022\"\n            onChange={dateChangeHandler}\n          />\n        </div>\n      </div>\n\n      <div className=\"new-expense__actions\">\n        <button type=\"submit\">Add new expense</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ExpenseForm;\n"]},"metadata":{},"sourceType":"module"}